# vim: set filetype=bash

RESET=$(tput sgr0)
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
DARK_GRAY=$(tput setaf 8)

declare -a on_prompt

git_ps1 () {
    if [ `type -t __git_ps1` ]; then
        __git_ps1 "\[$DARK_GRAY\] on \[$MAGENTA\]%s"
    fi
}

prompt_command () {
    LAST_EXIT_CODE=$?
    if [[ $LAST_EXIT_CODE != 0 ]]; then
        echo "${RED}✖ $DARK_GRAY($LAST_EXIT_CODE)$RESET"
        tput bel
    fi

    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    GIT_PS1_SHOWSTASHSTATE=1

    # \[...\] is to don't count escape sequences (see http://mywiki.wooledge.org/BashFAQ/053 and
    # http://askubuntu.com/questions/24358)
    #
    # Avoid using Unicode characters as it interferes with Vim's Conque-Term
    PS1_USER=$([[ "frosas frosasbosque" =~ `whoami` ]] || echo " \[$DARK_GRAY\]\u in")
    PS1="\[$RESET\]\n$PS1_USER\[$GREEN\]\w$(git_ps1) \[$DARK_GRAY\]»\[$RESET\] "

    # For anything else we may want to do at every command
    for callback in "${on_prompt[@]}"; do $callback; done
}

PROMPT_COMMAND=prompt_command
