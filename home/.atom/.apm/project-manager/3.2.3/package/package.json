{"name":"project-manager","main":"./lib/project-manager","version":"3.2.3","description":"Project Manager for easy access and switching between projects in Atom.","repository":{"type":"git","url":"git+https://github.com/danielbrodin/atom-project-manager.git"},"license":"MIT","keywords":["project","manager","settings","workflow","productivity"],"engines":{"atom":">1.4.0"},"dependencies":{"atom-project-util":"^4.0.0","atom-space-pen-views":"^2.0.3","change-case":"^2.3.1","etch":"^0.6.3","findit":"^2.0.0","mobx":"^2.4.4","season":"^5.2.0","underscore-plus":"^1.6.6"},"providedServices":{"project-manager":{"description":"Get access to all saved projects","versions":{"3.1.0":"provideProjects"}}},"configSchema":{"showPath":{"type":"boolean","default":true},"environmentSpecificProjects":{"type":"boolean","default":false},"prettifyTitle":{"type":"boolean","default":true,"description":"Will suggest a prettified project title on save."},"sortBy":{"type":"string","description":"Default sorting is the order in which the projects are","default":"default","enum":["default","title","group","last modified"]},"includeGitRepositories":{"type":"boolean","default":false,"description":"Will search for directories in your `Project Home` that include `.git` and list them."},"ignoreDirectories":{"type":"string","default":"node_modules, vendor","description":"Comma separated list of directories to skip when looking for git repositories."},"alwaysOpenInSameWindow":{"type":"boolean","default":false,"description":"Will reverse `shift+enter` in the list view to open in a new window."}},"devDependencies":{"babel-eslint":"^6.1.2","eslint":"^3.4.0","eslint-config-airbnb-base":"^5.0.3","eslint-plugin-import":"^1.14.0"},"readme":"# Project Manager\n<!-- [![Build status](https://travis-ci.org/danielbrodin/atom-project-manager.svg?branch=master)](https://travis-ci.org/danielbrodin/atom-project-manager/) -->\n[![apm](https://img.shields.io/apm/dm/project-manager.svg)](https://atom.io/packages/project-manager)\n[![apm](https://img.shields.io/apm/v/project-manager.svg)]()\n\n[![Paypal Donations](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=DR4XQWAZV6M2A&lc=SE&item_name=Project%20Manager&item_number=atom%2dproject%2dmanager&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted) a :beer: if you enjoy using the [project manager](https://github.com/danielbrodin/atom-project-manager) :)\n\n![Project Manager](https://raw.github.com/danielbrodin/atom-project-manager/master/project-manager.gif)\n\n\nGet easy access to all your projects and manage them with project specific settings and options.\n\n## Install\n```\n$Â apm install project-manager\n```\nYou can also open Atom and go to Preferences > Install and search for `project-manager`\n\n\n## Use\n### List Projects\n`ctrl-cmd-p` (mac) / `alt-shift-P` (win & linux) or `Project Manager: List Projects` in the Command Palette.\n\nProjects can be filtered by `title`, `group` and `template` by typing `group: atom` which would give all projects with the `atom` group.\n\n\n### Save Project\n`Project Manager: Save Project` in the Command Palette and write the title you want to save the project as.\n\n### Edit Project\n`Project Manager: Edit Project` will open a page where you can edit the current project. It currently only supports certain fields.\n\n### Edit Projects\nAll projects are saved in a `.cson` file which you can easily reach by searching for `Project Manager: Edit Projects` in the Command Palette.\n\n## Project Settings\n\nsetting    | Type      | Description                                                                                                                                           | Default               \n-----------|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------\n`title`    | `string`  | Projects title. Used in the projects list                                                                                                | `''`                  \n`paths`    | `array`   | The folders that will open in the tree view. First path is the main one that counts as the project.                                                   | `[]`                  \n`settings` | `Object`  | Enables you to set project specific settings. Everything that goes in the `config.cson` file can go here. It also supports scoped settings.           | `{}`                  \n`icon`     | `string`  | Icon that shows in the projects list. It's class-based so can either be a class already provided by Atom like `icon-squirell` or a class of your own. | `'icon-chevron-right'`\n`devMode`  | `boolean` | `true` if project should open in dev mode                                                                                                             | `false`               \n`group`    | `string`  | Adds a group to the projects list that can be used to group and filter projects                                                                       | `null`                \n`template` | `string`  | If you add a project in the `projects.cson` file without `paths` it will count as a template. This way you can easily share settings between projects | `null`                \n\n### Local settings file\nAll these settings can be added to a `project.cson` file in the root folder of the project. It follows the below example, but without the array.\n\n### Example\n```coffeescript\n[\n  {\n    title: 'Project Manager'\n    group: 'Atom'\n    paths: [\n      '/path/to/project-manager'\n    ]\n    devMode: true\n    settings:\n      'editor.tabLength': 4\n      'editor.showInvisibles': true\n  }\n]\n\n```\n\n## Provider\nIf you want to use the projects available through the Project Manager you can use the provided methods.\n\n```javascript\nfunction consumeProjectManager({ getProjects, getProject, saveProject, openProject } => {\n  /**\n   * Get an array containing all projects.\n   * The callback will be run each time a project is added.\n   */\n  getProjects(projects => {\n    // Do something with the projects.\n  });\n\n  /**\n   * Get the currently active project.\n   * The callback will be run whenever the active project changes.\n   */\n  getProject(project => {\n    if (project) {\n      // We have an active project.\n    } else {\n      // Project is either not loaded yet, or there is no project saved.\n    }\n  });\n\n  /**\n   * Can take either a project recieved from getProjects/getProject or\n   * just an object with the props for a new project.\n   */\n  saveProject(project);\n\n  /**\n   * Will open the project.\n   * `openInSameWindow` should be true if the project should open up in the\n   * current window.\n   */\n  openProject(project, openInSameWindow);\n});\n\n```\n\n\n## Contribute\nIf you would like to contribute to the project manager, be it new features or bugs,\nplease do the following:\n\n1. Fork the repository\n2. Create a new topic branch off the master branch that describe what it does\n3. Commit and push the branch\n4. Make a pull request describing what you have done\n5. Now it will hopefully get merged :)\n\nAll PR's should:\n- Pass the [eslint](https://atom.io/packages/linter-eslint) linter\n- Add a test when it makes sense, which should be most of the time\n\n--------\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/danielbrodin/atom-project-manager/issues"},"homepage":"https://github.com/danielbrodin/atom-project-manager#readme","_id":"project-manager@3.2.3","_shasum":"e887f8b35528c9816edb90e48b48bb6e35d47451","_resolved":"file:../d-116821-3628-1olyykf/package.tgz","_from":"../d-116821-3628-1olyykf/package.tgz"}