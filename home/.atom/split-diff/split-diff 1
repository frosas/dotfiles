/* eslint-env browser, node */

(function () { // Required because the `return` we have later
    var Yaku = require('yaku');
    var tealium = require('./tealium');
    var time = require('../time');
    var marketing = require('../analytics/marketing');
    var analytics = require('../analytics');

    var dctk = require('../dctk');
    var util = require('../analytics/util');

    if (dctk._loaded) { // Avoid loading the lib twice
        util.warn(new Error("DCTK was attempted to be loaded twice"));
        return;
    }

    dctk._loaded = true;

    // By default it only logs the error in the console. With this we ensure the
    // errors are reported.
    Yaku.onUnhandledRejection = function (reason) {
        util.warn(reason.message);
    };

    analytics.init();

    require('./bootstrap');
    require('./main');
    require('./util');
    require('./omniture-track-plugins');
    require('./abacus');

    dctk.tealium = {};

    /**
     * Returns a reference to the `utag` object, loading it if it wasn't already
     * available.
     *
     * It requires the `tealiumSettingInfo` object to be set with:
     *
     * - `tealiumProfilename` (`string`)
     * - `tealiumEnvironment` (`string`) Either `prod`, `dev` or `qa`.
     *
     * Usage example:
     *
     * ```js
     * window.tealiumSettingInfo = {
     *     tealiumProfilename: 'main',
     *     tealiumEnvironment: 'prod'
     * };
     *
     * dctk.tealium.getUtag().then(function(utag) {
     *     utag.view(â€¦);
     * });
     * ```
     *
     * @api
     * @return {Promise} The `utag` object
     */
    dctk.tealium.getUtag = function() {
        return tealium.getUtag();
    };

    // Expose methods used during functional testing
    dctk._increaseTimeDelta = function(delta) { time.delta += delta; };
    dctk._getReferrer = marketing.getReferrer;

    require('./amd');
})();
