# ----------------------------------------------------------------------------
#  ColorPicker: Regexes
# ----------------------------------------------------------------------------

    module.exports = [
        # Matches Sass variable: eg.
        # $color-var
        {type: 'variable:sass', regex: /([\$])([\w0-9-_]+)/ig}

        # Matches LESS variable: eg.
        # @color-var
        {type: 'variable:less', regex: /([\@])([\w0-9-_]+)/ig}

        # Matches HSL + A: eg
        # hsla(320, 100%, 38%, 0.3) and hsla(26, 57, 32, .3) and hsla(      36 ,    67   ,   16   , 0.3 ) and hsla(0, 0%, 0%, 0.42)
        {type: 'hsla', regex: /hsla\s*?\(\s*([0-9]|[1-9][0-9]|[1|2][0-9][0-9]|3[0-5][0-9]|360)\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?(0|1|0*\.\d+)\s*?\)/ig}

        # Matches HSL: eg
        # hsl(320, 100%, 100%) and hsl(26, 57, 32) and hsl(      36   ,    67   ,   16 )
        {type: 'hsl', regex: /hsl\s*?\(\s*([0-9]|[1-9][0-9]|[1|2][0-9][0-9]|3[0-5][0-9]|360)\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*\)/ig}

        # Matches HSV: eg
        # hsv(320, 100%, 100%) and hsv(26, 57, 32) and hsv(      36   ,    67   ,   16 )
        {type: 'hsv', regex: /hsv\s*?\(\s*([0-9]|[1-9][0-9]|[1|2][0-9][0-9]|3[0-5][0-9]|360)\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*\)/ig}

        # Matches HSV + A: eg
        # hsva(320, 100%, 38%, 0.3) and hsva(26, 57, 32, .3) and hsva(      36 ,    67   ,   16   , 0.3 ) and hsva(0, 0%, 0%, 0.42)
        {type: 'hsva', regex: /hsva\s*?\(\s*([0-9]|[1-9][0-9]|[1|2][0-9][0-9]|3[0-5][0-9]|360)\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?([0-9]|[1-9][0-9]|100)\%?\s*?,\s*?(0|1|0*\.\d+)\s*?\)/ig}

        # Matches VEC3: eg
        # vec3(0.44f, 0.3, 0) and vec3(1.0, 0.42, .4) and vec3(      1f  ,    0.4   ,   1.0 )
        {type: 'vec3', regex: /vec3\s*?\(\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\,\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\,\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\)/ig}

        # Matches VEC4: eg
        # vec4(0.4, 0.33, 0f, 0.5) and vec4(1.0, 0.4121231f, .4, 1.0f) and vec4(      1f   ,    0.4   ,   1.0, 0 )
        {type: 'vec4', regex: /vec4\s*?\(\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\,\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\,\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\,\s*?([0]?\.[0-9]*|1\.0|1|0)[f]?\s*?\)/ig}

        # Matches HEX + A: eg
        # rgba(#fff, 0.3) and rgba(#000000, .8) and rgba ( #000    , .8)
        {type: 'hexa', regex: /rgba\s*?\(\s*(\#[a-f0-9]{6}|\#[a-f0-9]{3})\s*?,\s*?(0|1|0*\.\d+)\s*?\)/ig}

        # Matches RGB + A: eg.
        # rgba(0, 99, 199, 0.3) and rgba ( 82   ,    121,    0,     .68  )
        {type: 'rgba', regex: /rgba\s*?\(\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][<0-9]|25[0-5])\s*?,\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\s*?,\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\s*?,\s*?(0|1|0*\.\d+)\s*?\)/ig}

        # Matches RGB: eg.
        # rgb(0, 99, 199) and rgb ( 255   , 180   , 255 )
        {type: 'rgb', regex: /rgb\s*?\(\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\s*?,\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\s*?,\s*?([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\s*?\)/ig}

        # Matches HEX:
        # eg. #000 and #ffffff
        {type: 'hex', regex: /(\#[a-f0-9]{6}|\#[a-f0-9]{3})/ig}
    ]
