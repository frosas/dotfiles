{
    "<async-fragment>": {
        "renderer": "./async-fragment-tag",
        "@data-provider": "expression",
        "@arg": {
            "type": "expression",
            "preserve-name": true
        },
        "@arg-*": {
            "pattern": true,
            "type": "string",
            "preserve-name": true
        },
        "@var": {
            "type": "identifier",
            "autocomplete": [
                {
                    "snippet": "var=\"${1:varName}\""
                },
                {
                }
            ]
        },

        "@method": "string",

        "@timeout": "integer",

        "@timeout-message": "string",
        "@error-message": "string",
        "@placeholder": "string",

        "@renderTimeout": "function",
        "@renderError": "function",
        "@renderPlaceholder": "function",

        "@name": {
            "type": "string",
            "description": "Name of async fragment",
            "autocomplete": [
                {
                    "snippet": "name=\"${1:name}\""
                },
                {
                }
            ]
        },
        "@_name": "string",
        "@client-reorder": {
            "type": "boolean",
            "description": "Use JavaScript on client to move async fragment into the proper place."
        },
        "@scope": {
            "type": "expression",
            "description": "The value of 'this' when invoking the data provider function (N/A with promises)"
        },
        "@show-after": {
            "type": "string"
        },

        "vars": [{
            "name-from-attribute": "var"
        }],
        "transformer": "./async-fragment-tag-transformer",
        "autocomplete": [
            {
                "snippet": "async-fragment data-provider=${1:data.myDataProvider} var=\"${2:varName}\"",
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragment><code>"
            },
            {
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragment><code>"
            }
        ]
    },
    "<async-fragments>": {
        "renderer": "./async-fragments-tag",
        "autocomplete": [
            {
                "snippet": "async-fragments client-reorder",
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragments><code>"
            },
            {
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragments><code>"
            }
        ]
    },
    "<async-fragment-placeholder>": {
        "transformer": "./async-fragment-nested-tag-transformer",
        "autocomplete": [
            {
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragment-placeholder><code>"
            }
        ]
    },
    "<async-fragment-timeout>": {
        "transformer": "./async-fragment-nested-tag-transformer",
        "autocomplete": [
            {
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragment-timeout><code>"
            }
        ]
    },
    "<async-fragment-error>": {
        "transformer": "./async-fragment-nested-tag-transformer",
        "autocomplete": [
            {
                "descriptionMoreURL": "http://markojs.com/docs/marko/async-taglib/#<code>&ltasync-fragment-error><code>"
            }
        ]
    }
}